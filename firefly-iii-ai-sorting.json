[
    {
        "id": "webhook_flow_v2",
        "type": "tab",
        "label": "AI Firefly III Categorizer (Webhook + LLM)",
        "disabled": false,
        "info": "Triggered by Firefly III webhooks. Adds category/budget using a small
OpenAI-compatible model (e.g. Phi-3 Mini)."
    },
    {
        "id": "parse_webhook",
        "type": "function",
        "z": "webhook_flow_v2",
        "name": "Parse and Validate Webhook",
        "func": "const tx = msg.payload.content.transactions[0] || msg.payload;\n\nif (!tx ||
tx.type !== 'withdrawal') {\n    node.warn('Ignoring non-withdrawal transaction');\n
return null;\n}\n\nif (tx.category_name && tx.budget_name) {\n    node.warn('Already
categorized and budgeted');\n    return null;\n}\n\nmsg.tx = tx;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "get_categories"
            ]
        ]
    },
    {
        "id": "get_categories",
        "type": "http request",
        "z": "webhook_flow_v2",
        "name": "Get Categories",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://YOUR_FIREFLY_URL/api/v1/categories",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 100,
        "wires": [
            [
                "store_categories"
            ]
        ]
    },
    {
        "id": "store_categories",
        "type": "change",
        "z": "webhook_flow_v2",
        "name": "Store Categories",
        "rules": [
            {
                "t": "set",
                "p": "categories",
                "pt": "msg",
                "to": "payload.data",
                "tot": "jsonata"
            }
        ],
        "x": 810,
        "y": 100,
        "wires": [
            [
                "get_budgets"
            ]
        ]
    },
    {
        "id": "get_budgets",
        "type": "http request",
        "z": "webhook_flow_v2",
        "name": "Get Budgets",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://YOUR_FIREFLY_URL/api/v1/budgets",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "store_budgets"
            ]
        ]
    },
    {
        "id": "store_budgets",
        "type": "change",
        "z": "webhook_flow_v2",
        "name": "Store Budgets",
        "rules": [
            {
                "t": "set",
                "p": "budgets",
                "pt": "msg",
                "to": "payload.data",
                "tot": "jsonata"
            }
        ],
        "x": 800,
        "y": 160,
        "wires": [
            [
                "build_prompt"
            ]
        ]
    },
    {
        "id": "build_prompt",
        "type": "function",
        "z": "webhook_flow_v2",
        "name": "Build Chat Prompt",
        "func": "const tx = msg.tx;\nconst categories = msg.categories.map(c =>
c.attributes.name).join(', ');\nconst budgets = msg.budgets.map(b =>
b.attributes.name).join(', ');\nmsg.payload = {\n  model: 'phi3:instruct', // change this if
desired\n  messages: [\n    { role: 'system', content: 'You are a financial transaction
classifier. The category of the transaction should be used to inform the budget.' },\n    {
role: 'user', content: `Transaction: ${tx.description}\\nAmount: ${tx.amount}\\nNotes:
${tx.notes || ''}\\nAvailable Categories: ${categories}\\nAvailable Budgets:
${budgets}\\nReturn ONLY in format:\\nCategory: <name> | Budget: <name>` }\n  ],\n
temperature: 0.2,\n  max_tokens: 100\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "call_llm"
            ]
        ]
    },
    {
        "id": "call_llm",
        "type": "http request",
        "z": "webhook_flow_v2",
        "name": "Call OpenAI-Compatible API",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://YOUR_LLM_API/v1/chat/completions",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 620,
        "y": 220,
        "wires": [
            [
                "update_transaction",
                "913be6d71c820aa5"
            ]
        ]
    },
    {
        "id": "update_transaction",
        "type": "function",
        "z": "webhook_flow_v2",
        "name": "Prepare Firefly Update",
        "func": "const response = msg.payload;\nconst text =
response.choices?.[0]?.message?.content || '';\nconst category =
text.match(/Category:\\s*([^|]+)/i)?.[1]?.trim();\nconst budget =
text.match(/Budget:\\s*(.+)/i)?.[1]?.trim();\n\nif (msg.statusCode != \"200\") { return null;
}\n\nmsg.method = 'PUT';\nmsg.url =
`https://YOUR_FIREFLY_URL/api/v1/transactions/${msg.tx.transaction_journal_id}`;\nmsg.headers
= { 'Authorization': 'Bearer YOUR_FIREFLY_TOKEN',
'Content-Type': 'application/json' };\nmsg.payload = {\n  apply_rules: false,\n
transactions: [{\n      category_name: category,\n      budget_name: budget,\n      tags:
['ai-assisted']\n  }]\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 220,
        "wires": [
            [
                "update_firefly",
                "3f6ed7ce5412c644"
            ]
        ]
    },
    {
        "id": "update_firefly",
        "type": "http request",
        "z": "webhook_flow_v2",
        "name": "Update Transaction in Firefly",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "webhook_reply"
            ]
        ]
    },
    {
        "id": "webhook_reply",
        "type": "http response",
        "z": "webhook_flow_v2",
        "name": "Respond to Firefly",
        "statusCode": "200",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "60c20c51f69171f5",
        "type": "link in",
        "z": "webhook_flow_v2",
        "name": "Webhooks link",
        "links": [
            "f6aed1e75f5f8b66"
        ],
        "x": 145,
        "y": 140,
        "wires": [
            [
                "parse_webhook"
            ]
        ]
    },
    {
        "id": "3f6ed7ce5412c644",
        "type": "debug",
        "z": "webhook_flow_v2",
        "name": "debugger",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1010,
        "y": 300,
        "wires": []
    },
    {
        "id": "913be6d71c820aa5",
        "type": "debug",
        "z": "webhook_flow_v2",
        "name": "Openai debugger",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 830,
        "y": 340,
        "wires": []
    }
]
